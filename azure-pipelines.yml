# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  testing: "karun"


steps:
- task: MavenAuthenticate@0
  inputs:
    artifactsFeeds: 'ATG_Artifacts'
    mavenServiceConnections: 'PipeLineArtifactory'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    #publishJUnitResults: true
    #testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean install package'
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'AZDevopsSonar Connection'
    scannerMode: 'MSBuild'
    projectKey: 'Project-Key-Sonar'
    projectName: 'Project-Name-Sonar'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
    #goals: 'build'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '3000'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      echo 'Hello world'
      
      export YOUR_TOKEN=37349de5b376b11b9f516efc719ae98f4f56df1a
      export YOUR_PROJECT_KEY=Project-Key-Sonar
      export SONAR_HOST=sonarqube.287908807331.rax.support
      export STATUS=$(curl -u ${YOUR_TOKEN}: -G --data-urlencode "projectKey=${YOUR_PROJECT_KEY}" https://${SONAR_HOST}/api/qualitygates/project_status | python -c 'import sys,json;data=json.load(sys.stdin);print(data["projectStatus"]["status"])')
      if [ "${STATUS}" = "Error" ]; then exit 1; fi
    
#- task: InvokeRESTAPI@1
#  inputs:
#    connectionType: 'connectedServiceName'
#    serviceConnection: 'SonarQube API'
#    method: 'GET'
#    headers: |
#      {
#      "Content-Type":"application/json", 
#      "projectKey": "Project-Key-Sonar"
#      }
#    waitForCompletion: 'true'

#- task: CopyFiles@2
#  inputs:
#    SourceFolder: '/home/vsts/work/1/s/'
#    Contents: '**/target/*.jar'
#    TargetFolder: '$(Build.ArtifactStagingDirectory)'
#- task: PublishBuildArtifacts@1
#  inputs:
#    pathToPublish: $(Build.ArtifactStagingDirectory)
#    artifactName: ATG_Artifacts
#- task: PublishPipelineArtifact@1
#  inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)'
#    artifact: 'ATG_Artifacts'
#    publishLocation: 'pipeline'


